{"ast":null,"code":"var _jsxFileName = \"/Users/mehmet/Desktop/WebDEvLearning/ReactApps/onlinelibrary/src/components/login-page/login-page.component.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport './login-page.styles.scss';\nimport firebase from \"../../assets/Firebase/firebase\";\nimport \"firebase/auth\";\nimport { TextField, Button } from '@material-ui/core';\nimport { UserContext } from '../provider/user.provider';\n\nfunction LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleEmailChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setEmail({ ...inputValues,\n      [name]: value\n    });\n  };\n\n  const handlePasswordChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setEmail({ ...inputValues,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoComplete: \"off\",\n    label: \"Email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: e => handleEmailChange(e),\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: e => handlePasswordChange(e),\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 20\n    }\n  }, \"New User?\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: this.handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: this.handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Sign in with Google\"));\n} // handleClick = () => {\n//     let user;\n//     let token;\n//     const auth = firebase.auth();\n//     const provider = new firebase.auth.GoogleAuthProvider();\n//     provider.setCustomParameters({ prompt: 'select_account' });\n//     auth.signInWithPopup(provider).then(function (result) {\n//         // This gives you a Google Access Token. You can use it to access the Google API.\n//         token = result.credential.accessToken;\n//         // The signed-in user info.\n//         user = result.user;\n//     }).then(this.updateUser(user));\n// }\n// updateUser = (user) => {\n//     const [setUser] = useContext(UserContext);\n//     setUser(user);\n// }\n\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/mehmet/Desktop/WebDEvLearning/ReactApps/onlinelibrary/src/components/login-page/login-page.component.jsx"],"names":["React","useState","useContext","Link","firebase","TextField","Button","UserContext","LoginPage","email","setEmail","password","setPassword","handleEmailChange","event","name","value","target","inputValues","handlePasswordChange","e","handleClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,0BAAP;AAEA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAO,eAAP;AAEA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAEA,SAASC,SAAT,GAAqB;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMY,iBAAiB,GAAGC,KAAK,IAAI;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAP,IAAAA,QAAQ,CAAC,EAAE,GAAGQ,WAAL;AAAkB,OAACH,IAAD,GAAQC;AAA1B,KAAD,CAAR;AACH,GAHD;;AAIA,QAAMG,oBAAoB,GAAGL,KAAK,IAAI;AAClC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AACAP,IAAAA,QAAQ,CAAC,EAAE,GAAGQ,WAAL;AAAkB,OAACH,IAAD,GAAQC;AAA1B,KAAD,CAAR;AACH,GAHD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,YAAY,EAAC,KADjB;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,IAAI,EAAC,OAJT;AAKI,IAAA,QAAQ,EAAEI,CAAC,IAAIP,iBAAiB,CAACO,CAAD,CALpC;AAMI,IAAA,KAAK,EAAEX,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eASI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,UADV;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,QAAQ,EAAEW,CAAC,IAAID,oBAAoB,CAACC,CAAD,CAJvC;AAKI,IAAA,KAAK,EAAET,QALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAO,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP,CAhBJ,eAiBI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAC,WAA9B;AAA0C,IAAA,KAAK,EAAC,SAAhD;AAA0D,IAAA,OAAO,EAAE,KAAKU,WAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAkBI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAA8C,IAAA,OAAO,EAAE,KAAKA,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAlBJ,CADJ;AAsBH,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAeb,SAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport './login-page.styles.scss';\n\nimport firebase from \"../../assets/Firebase/firebase\";\nimport \"firebase/auth\";\n\nimport { TextField, Button } from '@material-ui/core';\nimport { UserContext } from '../provider/user.provider';\n\nfunction LoginPage() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleEmailChange = event => {\n        const { name, value } = event.target;\n        setEmail({ ...inputValues, [name]: value });\n    };\n    const handlePasswordChange = event => {\n        const { name, value } = event.target;\n        setEmail({ ...inputValues, [name]: value });\n    };\n    return (\n        <div className='container-form'>\n            <TextField\n                autoComplete=\"off\"\n                label=\"Email\"\n                name=\"email\"\n                type='email'\n                onChange={e => handleEmailChange(e)}\n                value={email}\n            />\n            <TextField\n                label=\"Password\"\n                name=\"password\"\n                type='password'\n                onChange={e => handlePasswordChange(e)}\n                value={password}\n            />\n            <small><Link to=\"/register\">New User?</Link></small>\n            <Button type='submit' variant=\"contained\" color=\"primary\" onClick={this.handleClick}>Submit</Button>\n            <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClick}>Sign in with Google</Button>\n        </div>\n    )\n}\n// handleClick = () => {\n//     let user;\n//     let token;\n//     const auth = firebase.auth();\n//     const provider = new firebase.auth.GoogleAuthProvider();\n//     provider.setCustomParameters({ prompt: 'select_account' });\n//     auth.signInWithPopup(provider).then(function (result) {\n//         // This gives you a Google Access Token. You can use it to access the Google API.\n//         token = result.credential.accessToken;\n//         // The signed-in user info.\n//         user = result.user;\n//     }).then(this.updateUser(user));\n// }\n// updateUser = (user) => {\n//     const [setUser] = useContext(UserContext);\n//     setUser(user);\n// }\n\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}