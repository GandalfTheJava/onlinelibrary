{"ast":null,"code":"var _jsxFileName = \"/Users/mehmet/Desktop/WebDEvLearning/Portfolio/onlinelibrary/src/components/directory/directory.utils.jsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport './directory.styles.scss';\nimport { directoryContext } from '../provider/directory.provider';\nimport DirectoryItem from '../directory-item/directory-item.component';\n\nfunction DirectoryUtils() {\n  let [ListOfGenres, setListOfGenres] = useState();\n  const {\n    directory\n  } = useContext(directoryContext);\n  useEffect(() => {\n    setListOfGenres(directory);\n  });\n  let list;\n\n  if (ListOfGenres != null) {\n    Object.keys(ListOfGenres).map(function (key, index) {\n      console.log(ListOfGenres[key]);\n      console.log(ListOfGenres[index]);\n    });\n    list = Object.entries(ListOfGenres).map(genre => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genre-list-container\",\n      key: genre[0],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genre-list-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/genre/${genre[1].routeName.toLowerCase()}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, genre[1].title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genre-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, genre[1].bookList.filter((items, idx) => idx < 4).map(item => /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(DirectoryItem, {\n      bookName: item.bookName,\n      bookImage: item.bookImage,\n      bookAuthor: item.bookAuthor,\n      bookDescription: item.bookDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 37\n      }\n    }))))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, list != null ? list : null));\n}\n\nexport default DirectoryUtils;","map":{"version":3,"sources":["/Users/mehmet/Desktop/WebDEvLearning/Portfolio/onlinelibrary/src/components/directory/directory.utils.jsx"],"names":["React","useState","useEffect","useContext","Link","directoryContext","DirectoryItem","DirectoryUtils","ListOfGenres","setListOfGenres","directory","list","Object","keys","map","key","index","console","log","entries","genre","routeName","toLowerCase","title","bookList","filter","items","idx","item","id","bookName","bookImage","bookAuthor","bookDescription"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,yBAAP;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAOC,aAAP,MAA0B,4CAA1B;;AAEA,SAASC,cAAT,GAA0B;AACtB,MAAI,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAA9C;AACA,QAAM;AAAES,IAAAA;AAAF,MAAgBP,UAAU,CAACE,gBAAD,CAAhC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,eAAe,CAACC,SAAD,CAAf;AACH,GAFQ,CAAT;AAGA,MAAIC,IAAJ;;AACA,MAAIH,YAAY,IAAI,IAApB,EAA0B;AACtBI,IAAAA,MAAM,CAACC,IAAP,CAAYL,YAAZ,EAA0BM,GAA1B,CAA8B,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AAChDC,MAAAA,OAAO,CAACC,GAAR,CAAYV,YAAY,CAACO,GAAD,CAAxB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYV,YAAY,CAACQ,KAAD,CAAxB;AACH,KAHD;AAIAL,IAAAA,IAAI,GAAGC,MAAM,CAACO,OAAP,CAAeX,YAAf,EAA6BM,GAA7B,CAAiCM,KAAK,iBACzC;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAsC,MAAA,GAAG,EAAEA,KAAK,CAAC,CAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,UAASA,KAAK,CAAC,CAAD,CAAL,CAASC,SAAT,CAAmBC,WAAnB,EAAiC,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyDF,KAAK,CAAC,CAAD,CAAL,CAASG,KAAlE,CADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQH,KAAK,CAAC,CAAD,CAAL,CAASI,QAAT,CAAkBC,MAAlB,CAAyB,CAACC,KAAD,EAAQC,GAAR,KAAgBA,GAAG,GAAG,CAA/C,EAAkDb,GAAlD,CAAsDc,IAAI,iBAElD;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AACI,MAAA,QAAQ,EAAED,IAAI,CAACE,QADnB;AAEI,MAAA,SAAS,EAAEF,IAAI,CAACG,SAFpB;AAGI,MAAA,UAAU,EAAEH,IAAI,CAACI,UAHrB;AAII,MAAA,eAAe,EAAEJ,IAAI,CAACK,eAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFR,CAFR,CAJJ,CADG,CAAP;AAuBH;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMtB,IAAI,IAAI,IAAR,GAAeA,IAAf,GAAsB,IAA5B,CADJ,CADJ;AAOH;;AAED,eAAeJ,cAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport './directory.styles.scss';\nimport { directoryContext } from '../provider/directory.provider';\nimport DirectoryItem from '../directory-item/directory-item.component';\n\nfunction DirectoryUtils() {\n    let [ListOfGenres, setListOfGenres] = useState();\n    const { directory } = useContext(directoryContext);\n    useEffect(() => {\n        setListOfGenres(directory);\n    });\n    let list;\n    if (ListOfGenres != null) {\n        Object.keys(ListOfGenres).map(function (key, index) {\n            console.log(ListOfGenres[key]);\n            console.log(ListOfGenres[index]);\n        });\n        list = Object.entries(ListOfGenres).map(genre =>\n            <div className=\"genre-list-container\" key={genre[0]}>\n                <div className=\"genre-list-title\">\n                    <Link to={`/genre/${genre[1].routeName.toLowerCase()}`}>{genre[1].title}</Link>\n                </div>\n                <div className=\"genre-items\">\n                    {\n                        genre[1].bookList.filter((items, idx) => idx < 4).map(item =>\n                            (\n                                <div key={item.id}>\n                                    <DirectoryItem\n                                        bookName={item.bookName}\n                                        bookImage={item.bookImage}\n                                        bookAuthor={item.bookAuthor}\n                                        bookDescription={item.bookDescription}\n                                    />\n                                </div>\n                            )\n                        )\n                    }\n                </div>\n            </div>\n        )\n    }\n    return (\n        <div>\n            <div>{list != null ? list : null}</div>\n        </div >\n\n    )\n\n}\n\nexport default DirectoryUtils;\n"]},"metadata":{},"sourceType":"module"}