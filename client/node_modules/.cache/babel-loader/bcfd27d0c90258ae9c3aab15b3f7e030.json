{"ast":null,"code":"//<!-- The core Firebase JS SDK is always required and must be listed first -->\nimport firebase from 'firebase';\nimport \"firebase/auth\";\nimport \"firebase/firestore\"; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\nfirebase.initializeApp(firebaseConfig);\nconst userRef = firestore.doc(`users/${user.uid}`);\nconst snapshot = await userRef.get();\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      email,\n      displayName,\n      photoURL\n    } = user;\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n\n  return getUserDocument(user.uid);\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();","map":{"version":3,"sources":["/Users/mehmet/Desktop/WebDEvLearning/ReactApps/onlinelibrary/src/assets/Firebase/firebase.js"],"names":["firebase","firebaseConfig","apiKey","process","env","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","initializeApp","userRef","firestore","doc","user","uid","snapshot","get","generateUserDocument","additionalData","exists","email","displayName","photoURL","set","error","console","getUserDocument","auth"],"mappings":"AAAA;AACA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP,C,CAEA;;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADD;AAEnBC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,qBAFL;AAGnBC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,sBAHN;AAInBC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,oBAJJ;AAKnBC,EAAAA,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,wBALR;AAMnBC,EAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW,6BANZ;AAOnBC,EAAAA,KAAK,EAAEb,OAAO,CAACC,GAAR,CAAYa;AAPA,CAAvB;AASAjB,QAAQ,CAACkB,aAAT,CAAuBjB,cAAvB;AACA,MAAMkB,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQC,IAAI,CAACC,GAAI,EAAhC,CAAhB;AACA,MAAMC,QAAQ,GAAG,MAAML,OAAO,CAACM,GAAR,EAAvB;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAOJ,IAAP,EAAaK,cAAb,KAAgC;AAChE,MAAI,CAACL,IAAL,EAAW;AACX,QAAMH,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQC,IAAI,CAACC,GAAI,EAAhC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAML,OAAO,CAACM,GAAR,EAAvB;;AACA,MAAI,CAACD,QAAQ,CAACI,MAAd,EAAsB;AAClB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,WAAT;AAAsBC,MAAAA;AAAtB,QAAmCT,IAAzC;;AACA,QAAI;AACA,YAAMH,OAAO,CAACa,GAAR,CAAY;AACdF,QAAAA,WADc;AAEdD,QAAAA,KAFc;AAGdE,QAAAA,QAHc;AAId,WAAGJ;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOM,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACH;AACJ;;AACD,SAAOE,eAAe,CAACb,IAAI,CAACC,GAAN,CAAtB;AACH,CAlBM;AAoBP,OAAO,MAAMa,IAAI,GAAGpC,QAAQ,CAACoC,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGpB,QAAQ,CAACoB,SAAT,EAAlB","sourcesContent":["//<!-- The core Firebase JS SDK is always required and must be listed first -->\nimport firebase from 'firebase';\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\nfirebase.initializeApp(firebaseConfig);\nconst userRef = firestore.doc(`users/${user.uid}`);\nconst snapshot = await userRef.get();\n\nexport const generateUserDocument = async (user, additionalData) => {\n    if (!user) return;\n    const userRef = firestore.doc(`users/${user.uid}`);\n    const snapshot = await userRef.get();\n    if (!snapshot.exists) {\n        const { email, displayName, photoURL } = user;\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                photoURL,\n                ...additionalData\n            });\n        } catch (error) {\n            console.error(\"Error creating user document\", error);\n        }\n    }\n    return getUserDocument(user.uid);\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();"]},"metadata":{},"sourceType":"module"}