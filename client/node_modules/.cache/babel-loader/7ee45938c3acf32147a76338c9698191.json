{"ast":null,"code":"var _jsxFileName = \"/Users/mehmet/Desktop/WebDEvLearning/ReactApps/onlinelibrary/src/components/directory/directory.component.jsx\";\nimport React, { Component } from 'react';\nimport './directory.styles.scss';\nimport { books } from '../../assets/database';\nimport DirectoryItem from '../directory-item/directory-item.component';\n\nclass Directory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ListOfGenres: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(books);\n    this.setState({\n      ListOfGenres: books\n    });\n  }\n\n  render() {\n    let {\n      ListOfGenres\n    } = this.state;\n    let list = ListOfGenres.length > 1 ? ListOfGenres.map(genre => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genre-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genre-list-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, genre.genreName), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genre-items\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, genre.bookList.filter((items, idx) => idx < 2).map(item => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DirectoryItem, {\n      bookName: item.bookName,\n      bookImage: item.bookImage,\n      bookAuthor: item.bookAuthor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 33\n      }\n    })))))) : null;\n    return list;\n  }\n\n}\n\nexport default Directory;","map":{"version":3,"sources":["/Users/mehmet/Desktop/WebDEvLearning/ReactApps/onlinelibrary/src/components/directory/directory.component.jsx"],"names":["React","Component","books","DirectoryItem","Directory","constructor","props","state","ListOfGenres","componentDidMount","console","log","setState","render","list","length","map","genre","genreName","bookList","filter","items","idx","item","bookName","bookImage","bookAuthor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,yBAAP;AACA,SAASC,KAAT,QAAsB,uBAAtB;AAEA,OAAOC,aAAP,MAA0B,4CAA1B;;AACA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAC9BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,SAAKU,QAAL,CAAc;AAAEJ,MAAAA,YAAY,EAAEN;AAAhB,KAAd;AACH;;AACDW,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEL,MAAAA;AAAF,QAAmB,KAAKD,KAA5B;AACA,QAAIO,IAAI,GAAGN,YAAY,CAACO,MAAb,GAAsB,CAAtB,GAA0BP,YAAY,CAACQ,GAAb,CAAiBC,KAAK,iBACvD;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCA,KAAK,CAACC,SAAzC,CADJ,eAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQD,KAAK,CAACE,QAAN,CAAeC,MAAf,CAAsB,CAACC,KAAD,EAAQC,GAAR,KAAgBA,GAAG,GAAG,CAA5C,EAA+CN,GAA/C,CAAmDO,IAAI,iBACnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAEA,IAAI,CAACC,QAA9B;AAAwC,MAAA,SAAS,EAAED,IAAI,CAACE,SAAxD;AAAmE,MAAA,UAAU,EAAEF,IAAI,CAACG,UAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CAFR,CAFJ,CADiC,CAA1B,GAeP,IAfJ;AAiBA,WACIZ,IADJ;AAGH;;AAlC6B;;AAqClC,eAAeV,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport './directory.styles.scss';\nimport { books } from '../../assets/database';\n\nimport DirectoryItem from '../directory-item/directory-item.component';\nclass Directory extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            ListOfGenres: []\n        }\n    }\n    componentDidMount() {\n        console.log(books);\n        this.setState({ ListOfGenres: books })\n    }\n    render() {\n        let { ListOfGenres } = this.state;\n        let list = ListOfGenres.length > 1 ? ListOfGenres.map(genre =>\n            <div className=\"genre-list-container\">\n                <div className=\"genre-list-title\">{genre.genreName}</div>\n                <div className=\"genre-items\">\n                    {\n                        genre.bookList.filter((items, idx) => idx < 2).map(item => (\n                            <div>\n                                <DirectoryItem bookName={item.bookName} bookImage={item.bookImage} bookAuthor={item.bookAuthor} />\n                            </div>\n                        )\n\n                        )\n                    }\n                </div>\n            </div>\n        ) : null\n\n        return (\n            list\n        )\n    }\n}\n\nexport default Directory;\n"]},"metadata":{},"sourceType":"module"}