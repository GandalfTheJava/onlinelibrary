{"ast":null,"code":"var _jsxFileName = \"/Users/mehmet/Desktop/WebDEvLearning/ReactApps/onlinelibrary/src/components/login-page/login-page.component.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './login-page.styles.scss';\nimport { auth, createUserProfileDocument } from '../../assets/Firebase/firebase';\nimport { signInWithGoogle } from '../../assets/Firebase/firebase';\nimport { TextField, Button } from '@material-ui/core';\nimport { UserContext } from '../provider/user.provider';\n\nfunction LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    dispatch\n  } = useContext(UserContext);\n  useEffect(() => {\n    let unSubscribeFromAuth = auth.onAuthStateChanged(async user => {\n      //Equivalent to componentDidMount\n      const userRef = await createUserProfileDocument(user);\n      userRef.onSnapshot(snapShot => {\n        //dispatch({ type: 'LOG_IN_USER', payload: user })\n        console.log(snapShot.Data());\n      });\n    }); // returned function will be called on component unmount \n\n    return () => {\n      unSubscribeFromAuth();\n    };\n  }, []);\n\n  const handleGoogleSignIn = () => {\n    signInWithGoogle().then(function (result) {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = result.credential.accessToken; // The signed-in user info.\n\n      var user = result.user;\n      dispatch({\n        type: 'LOG_IN_USER',\n        payload: user\n      });\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // The email of the user's account used.\n\n      var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n      var credential = error.credential; // ...\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    auth().createUserWithEmailAndPassword(email, password).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      alert(errorMessage);\n    }); //dispatch({ type: 'LOG_IN_USER', user: { name: 'Name', logged: true } });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    type: \"submit\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    autoComplete: \"off\",\n    label: \"Email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: event => setEmail(event.target.value),\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Password\",\n    name: \"password\",\n    type: \"password\",\n    onChange: event => setPassword(event.target.value),\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 20\n    }\n  }, \"New User?\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: handleGoogleSignIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Sign in with Google\"));\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/mehmet/Desktop/WebDEvLearning/ReactApps/onlinelibrary/src/components/login-page/login-page.component.jsx"],"names":["React","useState","useContext","useEffect","Link","auth","createUserProfileDocument","signInWithGoogle","TextField","Button","UserContext","LoginPage","email","setEmail","password","setPassword","dispatch","unSubscribeFromAuth","onAuthStateChanged","user","userRef","onSnapshot","snapShot","console","log","Data","handleGoogleSignIn","then","result","token","credential","accessToken","type","payload","catch","error","errorCode","code","errorMessage","message","handleSubmit","e","preventDefault","createUserWithEmailAndPassword","alert","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './login-page.styles.scss';\n\nimport { auth, createUserProfileDocument } from '../../assets/Firebase/firebase';\nimport { signInWithGoogle } from '../../assets/Firebase/firebase';\nimport { TextField, Button } from '@material-ui/core';\nimport { UserContext } from '../provider/user.provider';\n\nfunction LoginPage() {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const { dispatch } = useContext(UserContext);\n    useEffect(() => {\n        let unSubscribeFromAuth = auth.onAuthStateChanged(async user => { //Equivalent to componentDidMount\n            const userRef = await createUserProfileDocument(user);\n            userRef.onSnapshot(snapShot => {\n                //dispatch({ type: 'LOG_IN_USER', payload: user })\n                console.log(snapShot.Data());\n            })\n        })\n\n        // returned function will be called on component unmount \n        return () => {\n            unSubscribeFromAuth();\n        }\n    }, []);\n    const handleGoogleSignIn = () => {\n        signInWithGoogle().then(function (result) {\n            // This gives you a Google Access Token. You can use it to access the Google API.\n            var token = result.credential.accessToken;\n            // The signed-in user info.\n            var user = result.user;\n\n            dispatch({ type: 'LOG_IN_USER', payload: user })\n\n        }).catch(function (error) {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            // The email of the user's account used.\n            var email = error.email;\n            // The firebase.auth.AuthCredential type that was used.\n            var credential = error.credential;\n            // ...\n        });\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        auth().createUserWithEmailAndPassword(email, password).catch(function (error) {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            alert(errorMessage);\n        });\n        //dispatch({ type: 'LOG_IN_USER', user: { name: 'Name', logged: true } });\n    }\n    return (\n        <div className='container-form'>\n            <form type='submit' onSubmit={handleSubmit}>\n                <TextField\n                    autoComplete=\"off\"\n                    label=\"Email\"\n                    name=\"email\"\n                    type='email'\n                    onChange={event => setEmail(event.target.value)}\n                    value={email}\n                />\n                <TextField\n                    label=\"Password\"\n                    name=\"password\"\n                    type='password'\n                    onChange={event => setPassword(event.target.value)}\n                    value={password}\n                />\n                <Button type='submit' variant=\"contained\" color=\"primary\">Submit</Button>\n            </form>\n            <small><Link to=\"/register\">New User?</Link></small>\n\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleGoogleSignIn}>Sign in with Google</Button>\n        </div >\n    )\n}\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}