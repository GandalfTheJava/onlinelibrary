{"ast":null,"code":"var _jsxFileName = \"/Users/mehmet/Desktop/WebDEvLearning/ReactApps/onlinelibrary/src/components/login-page/login-page.component.jsx\";\nimport React, { Component, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport './login-page.styles.scss';\nimport firebase from \"../../assets/Firebase/firebase\";\nimport \"firebase/auth\";\nimport { TextField, Button } from '@material-ui/core';\nimport { UserContext } from '../provider/user.provider';\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleClick = () => {\n      let user;\n      const auth = firebase.auth();\n      const provider = new firebase.auth.GoogleAuthProvider();\n      provider.setCustomParameters({\n        prompt: 'select_account'\n      });\n      auth.signInWithPopup(provider).then(function (result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = result.credential.accessToken; // The signed-in user info.\n\n        user = result.user;\n      });\n      updateUser(user);\n    };\n\n    this.updateUser = user => {\n      const [setUser] = useContext(UserContext);\n      setUser(user);\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      currentUser: []\n    };\n  }\n\n  render() {\n    let {\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      autoComplete: \"off\",\n      label: \"Email\",\n      name: \"email\",\n      type: \"email\",\n      onChange: this.handleChange,\n      value: email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      label: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      onChange: this.handleChange,\n      value: password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 24\n      }\n    }, \"New User?\")), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \"Sign in with Google\"));\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/mehmet/Desktop/WebDEvLearning/ReactApps/onlinelibrary/src/components/login-page/login-page.component.jsx"],"names":["React","Component","useContext","Link","firebase","TextField","Button","UserContext","LoginPage","constructor","props","handleChange","e","setState","target","name","value","handleClick","user","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithPopup","then","result","token","credential","accessToken","updateUser","setUser","state","email","password","currentUser","render"],"mappings":"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","sourcesContent":["import React, { Component, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport './login-page.styles.scss';\n\nimport firebase from \"../../assets/Firebase/firebase\";\nimport \"firebase/auth\";\n\nimport { TextField, Button } from '@material-ui/core';\nimport { UserContext } from '../provider/user.provider';\n\nclass LoginPage extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            currentUser: []\n\n        }\n    }\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n    handleClick = () => {\n        let user;\n        const auth = firebase.auth();\n        const provider = new firebase.auth.GoogleAuthProvider();\n        provider.setCustomParameters({ prompt: 'select_account' });\n        auth.signInWithPopup(provider).then(function (result) {\n            // This gives you a Google Access Token. You can use it to access the Google API.\n            var token = result.credential.accessToken;\n            // The signed-in user info.\n            user = result.user;\n        });\n        updateUser(user);\n    }\n    updateUser = (user) => {\n        const [setUser] = useContext(UserContext);\n        setUser(user);\n    }\n    render() {\n        let { email, password } = this.state;\n        return (\n            <div className='container-form'>\n                <TextField\n                    autoComplete=\"off\"\n                    label=\"Email\"\n                    name=\"email\"\n                    type='email'\n                    onChange={this.handleChange}\n                    value={email}\n                />\n                <TextField\n                    label=\"Password\"\n                    name=\"password\"\n                    type='password'\n                    onChange={this.handleChange}\n                    value={password}\n                />\n                <small><Link to=\"/register\">New User?</Link></small>\n                <Button type='submit' variant=\"contained\" color=\"primary\" onClick={this.handleClick}>Submit</Button>\n                <Button type='submit' variant=\"contained\" color=\"secondary\" onClick={this.handleClick}>Sign in with Google</Button>\n            </div>\n        )\n    }\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}